<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ABC-376(a-e)</title>
    <url>/2025/03/29/ABC-376-a-e/</url>
    <content><![CDATA[<h2 id="Tasks"><a href="#Tasks" class="headerlink" title="Tasks"></a>Tasks</h2><h2 id="ABC376"><a href="#ABC376" class="headerlink" title="ABC376"></a>ABC376</h2><blockquote>
<p>总结,acde题都能够在赛事大概读通题目,b题没看明白,</p>
<p>我感觉可能是自己的堆栈以及bfs还不够熟练</p>
</blockquote>
<h4 id="A"><a href="#A" class="headerlink" title="A"></a>A</h4><blockquote>
<p>最近总是A就wa，好好反思一下哈</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> n,c;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;c;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">a</span><span class="params">(n+<span class="number">1</span>)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> last=a[<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i]-last&gt;=c)&#123;</span><br><span class="line">			res++;</span><br><span class="line">			last=a[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>





<h4 id="B"><a href="#B" class="headerlink" title="B"></a>B</h4><blockquote>
<p>大致意思就是在环上移动到手的目的地的时候不能踩到另一只手</p>
<p>一开始这个代码不太行，应该是避开堵在中间的东西</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,q;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> l=<span class="number">1</span>,r=<span class="number">2</span>;</span><br><span class="line">	<span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">		<span class="type">char</span> h;</span><br><span class="line">		<span class="type">int</span> t;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;h&gt;&gt;t;</span><br><span class="line">		<span class="keyword">if</span>(h==<span class="string">&#x27;L&#x27;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(t&lt;=r)&#123;</span><br><span class="line">				res+=t-l;</span><br><span class="line">				l=t;</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				res+=(l+<span class="number">6</span>-t);</span><br><span class="line">				l=t;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(t&gt;=l)&#123;</span><br><span class="line">				res+=t-r;</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				res+=(r+<span class="number">6</span>-t);</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>改进但wa了13个点</p>
<p>第一个判断少了abs</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,q;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> l=<span class="number">1</span>,r=<span class="number">2</span>;</span><br><span class="line">	ll res=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">		<span class="type">char</span> h;</span><br><span class="line">		<span class="type">int</span> t;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;h&gt;&gt;t;</span><br><span class="line">		<span class="keyword">if</span>(h==<span class="string">&#x27;L&#x27;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(t&lt;=r&amp;&amp;l&lt;r)&#123;</span><br><span class="line">				res+=<span class="built_in">abs</span>(t-l);</span><br><span class="line">				l=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&lt;=r&amp;&amp;l&gt;r)&#123;</span><br><span class="line">				res+=(t+n-l);</span><br><span class="line">				l=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&gt;r&amp;&amp;l&lt;r)&#123;</span><br><span class="line">				res+=n-t+l;</span><br><span class="line">				l=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&gt;r&amp;&amp;l&gt;r)&#123;</span><br><span class="line">				res+=<span class="built_in">abs</span>(l-t);</span><br><span class="line">				l=t; </span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// cout&lt;&lt;res&lt;&lt;endl;</span></span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(t&lt;=l&amp;&amp;l&gt;r)&#123;</span><br><span class="line">				res+=<span class="built_in">abs</span>(t-r);</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&lt;=l&amp;&amp;l&lt;r)&#123;</span><br><span class="line">				res+=(t+n-r);</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&gt;l&amp;&amp;l&gt;r)&#123;</span><br><span class="line">				res+=n-t+r;</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&gt;l&amp;&amp;l&lt;r)&#123;</span><br><span class="line">				res+=<span class="built_in">abs</span>(r-t);</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// cout&lt;&lt;res&lt;&lt;endl;</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>jiangly gg的思路就是那么简单清晰</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://wlwtypora.oss-cn-shenzhen.aliyuncs.com/wlwtypora/202503292354224.png"
                     
                ></p>
<blockquote>
<p>不动的那个在中间才需要绕路~</p>
</blockquote>
<h4 id="C"><a href="#C" class="headerlink" title="C"></a>C</h4><blockquote>
<p>如果一开始就都能刚刚好装好就很好,答案就是那个没有盒子装的玩具的尺寸</p>
<p>如果都能装下,但是空隙浪费了?,那我们就从大到小的开始装</p>
</blockquote>
<blockquote>
<p>尽可能把大的先装完了去,</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">a</span><span class="params">(n+<span class="number">1</span>)</span>,<span class="title function_">b</span><span class="params">(n)</span>;</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">	<span class="type">int</span> maxn=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		maxn=max(maxn,a[i]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line"></span><br><span class="line">	sort(a.begin(),a.end());</span><br><span class="line">	sort(b.begin(),b.end());</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;b[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="type">int</span> x=lower_bound(a.begin(),a.end(),b[i])-a.begin();</span><br><span class="line">		<span class="comment">// cout&lt;&lt;x&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="keyword">if</span>(a[x<span class="number">-1</span>]&gt;b[i]||x==<span class="number">1</span>&amp;&amp;a[x]&gt;b[i])&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>一开始胡乱倒腾</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N],c[N];</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">st</span><span class="params">(n+<span class="number">1</span>)</span>,<span class="title function_">flag</span><span class="params">(n+<span class="number">1</span>)</span>;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt; b(n);</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">	<span class="type">int</span> maxn=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		maxn=max(maxn,a[i]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;c[i];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">	sort(c+<span class="number">1</span>,c+n);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// for(int i=1;i&lt;n;i++)&#123;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 	b[i].first=c[i];</span></span><br><span class="line">	<span class="comment">// 	b[i].second=i;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line">	<span class="comment">// 	cout&lt;&lt;a[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">	<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// for(int i=1;i&lt;n;i++)&#123;</span></span><br><span class="line">	<span class="comment">// 	cout&lt;&lt;c[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">	<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cnt=n<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i]&lt;=c[cnt])&#123;</span><br><span class="line">			flag[i]=<span class="number">1</span>;</span><br><span class="line">			st[cnt]=<span class="number">1</span>;</span><br><span class="line">			cnt--;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!st[i])&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!flag[i])&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>


<blockquote>
<p>模仿佬二分，wa了一个点，估计是r取值不够</p>
<p>好吧，改成1e9也不行。</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">a</span><span class="params">(n+<span class="number">1</span>)</span>,<span class="title function_">b</span><span class="params">(n)</span>;</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">	<span class="type">int</span> maxn=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">		maxn=max(maxn,b[i]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	sort(a.begin(),a.end());</span><br><span class="line"></span><br><span class="line">	<span class="keyword">auto</span> check=[&amp;](<span class="type">int</span> mid)&#123;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; c = b;</span><br><span class="line">		c.push_back(mid);</span><br><span class="line">		<span class="comment">// cout&lt;&lt;mid&lt;&lt;endl;</span></span><br><span class="line">		sort(c.begin(),c.end());</span><br><span class="line"></span><br><span class="line">		<span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;a[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">		<span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;c[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]&gt;c[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> l=<span class="number">0</span>,r=maxn+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">		<span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(check(mid)) r=mid;</span><br><span class="line">		<span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(!l||l==maxn+<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;l&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>abc真是个小可爱，敢卡我1e9,🙂</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">a</span><span class="params">(n+<span class="number">1</span>)</span>,<span class="title function_">b</span><span class="params">(n)</span>;</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">	<span class="type">int</span> maxn=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">		maxn=max(maxn,b[i]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	sort(a.begin(),a.end());</span><br><span class="line"></span><br><span class="line">	<span class="keyword">auto</span> check=[&amp;](<span class="type">int</span> mid)&#123;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; c = b;</span><br><span class="line">		c.push_back(mid);</span><br><span class="line">		<span class="comment">// cout&lt;&lt;mid&lt;&lt;endl;</span></span><br><span class="line">		sort(c.begin(),c.end());</span><br><span class="line"></span><br><span class="line">		<span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;a[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">		<span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;c[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]&gt;c[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> l=<span class="number">0</span>,r=<span class="number">1e9</span>+<span class="number">1</span>,ans=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">		<span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(check(mid))&#123;</span><br><span class="line">			r=mid;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(l==<span class="number">1e9</span>+<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;l&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p>网友原本的贪心</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">int</span> n,a[<span class="number">200005</span>],b[<span class="number">200005</span>];</span><br><span class="line"><span class="type">bool</span> <span class="title function_">cmp</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;b[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">	sort(b+<span class="number">1</span>,b+n,cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(b[i]&gt;=a[i])&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;=n<span class="number">-1</span>;j++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(b[i]&gt;=a[i+<span class="number">1</span>])&#123;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a[i]);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a[n]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://wlwtypora.oss-cn-shenzhen.aliyuncs.com/wlwtypora/202503292356607.png"
                     
                ></p>
<blockquote>
<p>帮网友改的贪心</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">int</span> n,a[<span class="number">200005</span>],b[<span class="number">200005</span>];</span><br><span class="line"><span class="type">bool</span> <span class="title function_">cmp</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;b[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">	sort(b+<span class="number">1</span>,b+n,cmp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> index=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(b[i]&gt;=a[i])&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			index=i;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;=n<span class="number">-1</span>;j++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(i&lt;=n&amp;&amp;b[j]&gt;=a[i+<span class="number">1</span>])&#123;</span><br><span class="line">					i++;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a[index]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>









<h4 id="D"><a href="#D" class="headerlink" title="D"></a>D</h4><blockquote>
<p>只能说难爆了,竟然轮到我用tarjan算法,虽然还是没有用tarjan做出来</p>
</blockquote>
<blockquote>
<p>如果回归最本质的问题,包含1的最小环是否能通过bfs求得,妈的,不就是用bfs求从1到1的最短路吗……</p>
</blockquote>
<blockquote>
<p>赛后第一打,wa了14个点</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> h[N],e[N],ne[N],idx;</span><br><span class="line"><span class="type">int</span> d[N],st[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">	e[idx]=b,ne[idx]=h[a],h[a]=idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bfs</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">queue</span>&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">	st[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=h[<span class="number">1</span>];~i;i=ne[i])&#123;</span><br><span class="line">		<span class="type">int</span> j=e[i];</span><br><span class="line">		d[j]=<span class="number">1</span>;</span><br><span class="line">        st[j]=<span class="number">1</span>;</span><br><span class="line">		q.push(j);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">		<span class="type">int</span> t=q.front();</span><br><span class="line">		q.pop();</span><br><span class="line">		st[t]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(t==<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;d[<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=h[t];~i;i=ne[i])&#123;</span><br><span class="line">			<span class="type">int</span> j=e[i];</span><br><span class="line">			<span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">				d[j]=d[t]+<span class="number">1</span>;</span><br><span class="line">				q.push(j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,m;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="type">int</span> a,b;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		add(a,b);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	bfs();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>借鉴了jiangly的,发现是和自己的思路差不多的,但是为什么自己写的就是错的</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> h[N],e[N],ne[N],idx;</span><br><span class="line"><span class="type">int</span> d[N],st[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">	e[idx]=b,ne[idx]=h[a],h[a]=idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bfs</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">queue</span>&lt;<span class="type">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=h[<span class="number">1</span>];~i;i=ne[i])&#123;</span><br><span class="line">		<span class="type">int</span> j=e[i];</span><br><span class="line">		d[j]=<span class="number">1</span>;</span><br><span class="line">		q.push(j);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">		<span class="type">int</span> t=q.front();</span><br><span class="line">		q.pop();</span><br><span class="line">        </span><br><span class="line">		<span class="keyword">if</span>(t==<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;d[<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=h[t];~i;i=ne[i])&#123;</span><br><span class="line">			<span class="type">int</span> j=e[i];</span><br><span class="line">			<span class="keyword">if</span>(d[j]==<span class="number">0x3f3f3f3f</span>)&#123;</span><br><span class="line">				d[j]=d[t]+<span class="number">1</span>;</span><br><span class="line">				q.push(j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,m;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="type">int</span> a,b;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		add(a,b);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	bfs();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> h[N],e[N],ne[N],idx;</span><br><span class="line"><span class="type">int</span> d[N],st[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">	e[idx]=b,ne[idx]=h[a],h[a]=idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bfs</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">queue</span>&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">	<span class="comment">// st[1]=1;</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=h[<span class="number">1</span>];~i;i=ne[i])&#123;</span><br><span class="line">		<span class="type">int</span> j=e[i];</span><br><span class="line">		d[j]=<span class="number">1</span>;</span><br><span class="line">        <span class="comment">// st[j]=1;</span></span><br><span class="line">		q.push(j);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">		<span class="type">int</span> t=q.front();</span><br><span class="line">		q.pop();</span><br><span class="line">		<span class="keyword">if</span>(st[t]) <span class="keyword">continue</span>;</span><br><span class="line">		st[t]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(t==<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;d[<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=h[t];~i;i=ne[i])&#123;</span><br><span class="line">			<span class="type">int</span> j=e[i];</span><br><span class="line">			<span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">				d[j]=d[t]+<span class="number">1</span>;</span><br><span class="line">				q.push(j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,m;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="type">int</span> a,b;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		add(a,b);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	bfs();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>我好像悟了，因为会有自环啊老铁</p>
<p>st[j]&#x3D;1和st[t]&#x3D;1，在碰到自环的时候是有区别的</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> h[N],e[N],ne[N],idx;</span><br><span class="line"><span class="type">int</span> d[N],st[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">	e[idx]=b,ne[idx]=h[a],h[a]=idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bfs</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">queue</span>&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">	d[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">	st[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=h[<span class="number">1</span>];~i;i=ne[i])&#123;</span><br><span class="line">		<span class="type">int</span> j=e[i];</span><br><span class="line">		<span class="keyword">if</span>(j==<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">			d[j]=d[<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">			st[j]=<span class="number">1</span>;</span><br><span class="line">			q.push(j);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// q.push(j);</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">		<span class="type">int</span> t=q.front();</span><br><span class="line">		q.pop();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// if(st[t]) continue;</span></span><br><span class="line">		<span class="comment">//st[t]=1;</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=h[t];~i;i=ne[i])&#123;</span><br><span class="line">			<span class="type">int</span> j=e[i];</span><br><span class="line">			<span class="keyword">if</span>(j==<span class="number">1</span>)&#123;</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;d[t]+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">				d[j]=d[t]+<span class="number">1</span>;</span><br><span class="line">				st[j]=<span class="number">1</span>;</span><br><span class="line">				q.push(j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,m;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="type">int</span> a,b;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		add(a,b);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	bfs();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>









<h4 id="E"><a href="#E" class="headerlink" title="E"></a>E</h4><blockquote>
<p>选的是下标，公式也是运用在下标。</p>
<p>动态规划行不行🙁</p>
<p>记忆化搜索不是得卡死</p>
<p>果不其然的卡飞了。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://wlwtypora.oss-cn-shenzhen.aliyuncs.com/wlwtypora/202503290846520.png"
                     
                ></p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(t--)&#123;</span><br><span class="line">		<span class="type">int</span> n,k;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">vector</span>&lt;ll&gt; <span class="title function_">a</span><span class="params">(n+<span class="number">1</span>)</span>,<span class="title function_">b</span><span class="params">(n+<span class="number">1</span>)</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line"></span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">st</span><span class="params">(n+<span class="number">1</span>)</span>;</span><br><span class="line"></span><br><span class="line">		ll res=<span class="number">1e18</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">auto</span> dfs=[&amp;](<span class="keyword">auto</span>&amp;&amp;dfs,<span class="type">int</span> cnt,ll maxn,ll sum)&#123;</span><br><span class="line">			<span class="keyword">if</span>(cnt&gt;k) <span class="keyword">return</span>;</span><br><span class="line">			<span class="keyword">if</span>(cnt==k)&#123;</span><br><span class="line"></span><br><span class="line">				res=min(res,maxn*sum);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(!st[i])&#123;</span><br><span class="line">					st[i]=<span class="number">1</span>;</span><br><span class="line">                    <span class="comment">//dfs里不要携程maxn=max(a[i],maxn),</span></span><br><span class="line">                    <span class="comment">//否则路径上的maxn不就固定了</span></span><br><span class="line">					dfs(dfs,cnt+<span class="number">1</span>,max(a[i],maxn),sum+b[i]);</span><br><span class="line">					st[i]=<span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		dfs(dfs,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>


<blockquote>
<p>下面这样去记录，maxn记录的是遍历过的最大值，没有恢复现场，如果maxn被改成6（案例二），那么在恢复0点再用1点的时候记录的最大时6，而不是拿max(a[2](上一层的maxn),a[3]),而是max(maxn,a[3])&#x3D;6;</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://wlwtypora.oss-cn-shenzhen.aliyuncs.com/wlwtypora/202503292358254.png"
                     
                ></p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(t--)&#123;</span><br><span class="line">		<span class="type">int</span> n,k;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">vector</span>&lt;ll&gt; <span class="title function_">a</span><span class="params">(n)</span>,<span class="title function_">b</span><span class="params">(n)</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line"></span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">st</span><span class="params">(n+<span class="number">1</span>)</span>;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line"></span><br><span class="line">		ll res=<span class="number">1e18</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">auto</span> dfs=[&amp;](<span class="keyword">auto</span>&amp;&amp;dfs,<span class="type">int</span> cnt,ll maxn,ll sum)&#123;</span><br><span class="line">			<span class="keyword">if</span>(cnt&gt;k) <span class="keyword">return</span>;</span><br><span class="line">			<span class="keyword">if</span>(cnt==k)&#123;</span><br><span class="line">				<span class="comment">// cout&lt;&lt;maxn&lt;&lt;endl;</span></span><br><span class="line">				<span class="comment">// for(int i=0;i&lt;k;i++) cout&lt;&lt;ans[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">				<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">				<span class="keyword">if</span>(res&gt;maxn*sum)&#123;</span><br><span class="line">					res=maxn*sum;</span><br><span class="line">					<span class="comment">// cout&lt;&lt;maxn&lt;&lt;endl;</span></span><br><span class="line">					<span class="comment">// for(int i=0;i&lt;k;i++) cout&lt;&lt;ans[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">					<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(!st[i])&#123;</span><br><span class="line">					st[i]=<span class="number">1</span>;</span><br><span class="line">					<span class="comment">// cout&lt;&lt;maxn&lt;&lt;endl;</span></span><br><span class="line">					ans.push_back(i);</span><br><span class="line">					<span class="comment">// dfs(dfs,cnt+1,maxn=max(a[i],maxn),sum+b[i]);</span></span><br><span class="line">					dfs(dfs,cnt+<span class="number">1</span>,max(a[i],maxn),sum+b[i]);</span><br><span class="line">					ans.pop_back();</span><br><span class="line">					st[i]=<span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		dfs(dfs,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p>学习了jiangly gg的代码，发现搜索其实会浪费很多时间，因为是选择三个元素，最大值直接用排序找到就好了，而最小值，一定是小的和小的相加，成一个不算大的最大值。</p>
<p>枚举a[i]就好了，排除掉添加第i对元素的之前的最大值，这样是比较优秀的枚举方式</p>
</blockquote>
<blockquote>
<p>只有大的a[i]带着的b[i]小于前面的b[j]才有可能对最小值有贡献</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(t--)&#123;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> n,k;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">vector</span>&lt;ll&gt; <span class="title function_">a</span><span class="params">(n)</span>,<span class="title function_">b</span><span class="params">(n)</span>;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">ord</span><span class="params">(n)</span>;</span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line"></span><br><span class="line">		iota(ord.begin(),ord.end(),<span class="number">0</span>);</span><br><span class="line">		sort(ord.begin(),ord.end(),[&amp;](<span class="type">int</span> x,<span class="type">int</span> y)&#123;</span><br><span class="line">			<span class="keyword">return</span> a[x]&lt;a[y];</span><br><span class="line">		&#125;);	</span><br><span class="line"></span><br><span class="line">		<span class="built_in">priority_queue</span>&lt;<span class="type">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line">		ll sum=<span class="number">0</span>;</span><br><span class="line">		ll res=<span class="number">1e18</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// for(auto i: ord) cout&lt;&lt;i&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">		<span class="comment">// for(auto i:ord)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;a[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">		<span class="comment">// for(auto i:ord)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;b[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">auto</span> i:ord)&#123;</span><br><span class="line">			sum+=b[i];</span><br><span class="line">			q.push(b[i]);</span><br><span class="line">			<span class="comment">// cout&lt;&lt;b[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">			<span class="keyword">while</span>(q.size()&gt;k)&#123;</span><br><span class="line">				sum-=q.top();</span><br><span class="line">				q.pop();</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(q.size()==k) res=min(res,sum*a[i]);</span><br><span class="line">			 </span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <tags>
        <tag>algorithm test</tag>
      </tags>
  </entry>
  <entry>
    <title>ABC-399(a-f)</title>
    <url>/2025/03/31/ABC-399-a-f/</url>
    <content><![CDATA[<p>[toc]</p>
<h2 id="ABC-399-a-f"><a href="#ABC-399-a-f" class="headerlink" title="ABC-399(a-f)"></a>ABC-399(a-f)</h2><blockquote>
<p>总结为掉分，掉得不应该。</p>
<p>教训是下次多读几遍题目，知道题目要做什么</p>
</blockquote>
<h3 id="A"><a href="#A" class="headerlink" title="A"></a>A</h3><blockquote>
<p>汉明码，直接找不同</p>
</blockquote>
<h3 id="B"><a href="#B" class="headerlink" title="B"></a>B</h3><blockquote>
<p>给数字排序，打得有点繁琐了</p>
</blockquote>
<h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><blockquote>
<p>并查集，打得也是有点繁琐。</p>
<p>重要思想：在并查集的一开始，把每一个看成一个连通块，每连接一条边，连通块就减少一个。</p>
<p>总结：相应的，最后用总点数减去剩下的连通块，就是连的边数</p>
</blockquote>
<h3 id="D"><a href="#D" class="headerlink" title="D"></a>D</h3><blockquote>
<p>一开始直接看样例，没有懂样例的最后一个例子，本人也因没认真读懂题目，一直在找最小换座位次数。</p>
<p>题意：找到第一次出现和第二次出现都相邻的点对数</p>
<p>方法：开一个数组维护一个数第一次出现的位置，当数x第一次出现的位置，和x前一位数 y $ (x!&#x3D;y) $ ，当且仅当 x和y第一次出现的位置相差1的时候才有统计答案。特殊地，(1) 如果y前一个位置的是他自己第一次出现的位置，这个时候的不能统计; (2) 如果刚统计完就是自己也不能统计；</p>
</blockquote>
<div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="type">int</span> n;</span><br><span class="line">  cin&gt;&gt;n;</span><br><span class="line">  <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(<span class="number">2</span>*n<span class="number">+2</span>)</span></span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;i++) cin&gt;&gt;a[i];</span><br><span class="line"></span><br><span class="line">  <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">  <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">yi</span><span class="params">(n<span class="number">+1</span>)</span></span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;i++)&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(yi[a[i]]&amp;&amp;yi[a[i<span class="number">-1</span>]]&amp;&amp;a[i<span class="number">-1</span>]!=a[i])&#123;</span><br><span class="line">      <span class="keyword">if</span>(yi[a[i<span class="number">-1</span>]]==i<span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">      <span class="keyword">if</span>(i<span class="number">-1</span>-yi[a[i<span class="number">-1</span>]]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">      <span class="keyword">if</span>(<span class="built_in">abs</span>(yi[a[i]]-yi[a[i<span class="number">-1</span>]])==<span class="number">1</span>)&#123;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="comment">// cout&lt;&lt;a[i]&lt;&lt;&#x27; &#x27;&lt;&lt;yi[a[i]]&lt;&lt;&#x27; &#x27;&lt;&lt;yi[a[i-1]]&lt;&lt;endl;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!yi[a[i]])&#123;</span><br><span class="line">      yi[a[i]]=i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="type">int</span> t;</span><br><span class="line">  cin&gt;&gt;t;</span><br><span class="line">  <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h3 id="F"><a href="#F" class="headerlink" title="F"></a>F</h3><blockquote>
<p>感觉可以用二项式展开定理</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://wlwtypora.oss-cn-shenzhen.aliyuncs.com/wlwtypora/202503300205709.png"
                      alt="image-20250330020542537"
                ></p>
</blockquote>
<h4 id="知识铺垫"><a href="#知识铺垫" class="headerlink" title="知识铺垫"></a>知识铺垫</h4><ol>
<li>求组合数</li>
</ol>
<blockquote>
<p>递推法 $O(n^2)$</p>
<p>递推公式：$ C_{n}^{m} &#x3D; C_{n-1}^{m} + C_{n-1}^{m-1} $</p>
<p>含义：从n个不同的书中选出m个的方案数，对于第一个数有 <strong>选</strong>或 <strong>不选</strong> 两种决策，如果选，则从剩下的 n-1 个中选 m-1 个，如果不选，则从剩下的 n-1 个中选 m 个</p>
<p>示意图：$ C[i][j] $ 来自左上和上方</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://wlwtypora.oss-cn-shenzhen.aliyuncs.com/wlwtypora/202503300222548.png"
                      alt="image-20250330022226324"
                ></p>
<div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> C[N][N];</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="type">int</span> n;</span><br><span class="line">  cin&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=i;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(j==<span class="number">0</span>) C[i][j]=<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">else</span> C[i][j]=(C[i<span class="number">-1</span>][j]+C[i<span class="number">-1</span>][j<span class="number">-1</span>])%mod;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></div>



<ol start="2">
<li>快速幂 + 组合公式</li>
</ol>
<blockquote>
<p>板子，用于大幂摸与乘法逆元</p>
</blockquote>
<div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="comment">//快速幂板子</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qui</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> k,<span class="type">int</span> p)</span></span>&#123;</span><br><span class="line">  <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(k)&#123;</span><br><span class="line">    <span class="keyword">if</span>(k&amp;<span class="number">1</span>) res=res*a%p;</span><br><span class="line">    k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    a=a*a%p;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span><span class="number">+10</span>;</span><br><span class="line"><span class="comment">//f[N] 用于存阶乘</span></span><br><span class="line"><span class="comment">//g[N] 用于存阶乘逆元</span></span><br><span class="line"><span class="type">int</span> f[N],g[N];</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="type">int</span> n,m;</span><br><span class="line">  cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"></span><br><span class="line">  g[<span class="number">0</span>]=f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    f[i]=f[i<span class="number">-1</span>]*i%mod;</span><br><span class="line">    g[i]=g[i<span class="number">-1</span>]*<span class="built_in">qui</span>(i,mod<span class="number">-2</span>,mod)%mod;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 组合数</span></span><br><span class="line">  cout&lt;&lt; f[n]*g[m]%mod*g[n-m]%mod;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<ol start="3">
<li>卢卡斯定理</li>
</ol>
<blockquote>
<p>待写…….</p>
</blockquote>
<h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><blockquote>
<p>题意：</p>
<p>思路：用组合意义取k次幂，二项式定理。</p>
<p>类似：<a class="link"   href="https://www.luogu.com.cn/problem/P1758" >NOI2009管道取珠<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
</blockquote>
<blockquote>
<p>思路@wjh</p>
<p>以第i个元素结尾的子数组和</p>
<p>每增加一个元素会产生什么影响</p>
</blockquote>
<blockquote>
<p>请观察如下式子：</p>
<p>下列每个元素$[i,j]$ 表示从下标 $i$ 到 $j$ 的子数组的和，以 $n&#x3D;4$ 为例</p>
<p>$[1,1]$</p>
<p>$[1,2],[2,2]$</p>
<p>$[1,3],[2,3],[3,3]$</p>
<p>$[1,4],[2,4],[3,4],[4,4]$</p>
</blockquote>
<blockquote>
<p>观察上式我们可以思考：</p>
<p>从第二层开始，当前层能否由上一层得来，由此，我们对式子进行变形：</p>
<p>$[1,1]$</p>
<p>$[1,1]+[2,2],[2,2]$</p>
<p>$[1,2]+[3,3],[2,2]+[3,3],[3,3]$</p>
<p>$[1,3]+[4,4],[2,3]+[4,4],[3,3]+[4,4],[4,4]$</p>
</blockquote>
<blockquote>
<p>我们继续思考对每个元素计算k次方，当前层会比上一层多出什么：</p>
<p>$([1,1])^k$</p>
<p>$([1,1]+[2,2])^k,([2,2])^k$</p>
<p>$([1,2]+[3,3])^k,([2,2]+[3,3])^k,([3,3])^k$</p>
<p>$([1,3]+[4,4])^k,([2,3]+[4,4])^k,([3,3]+[4,4])^k,([4,4])^k$</p>
</blockquote>
<blockquote>
<p>以第4层作为当前层(第4个元素结尾构成的子数组和有四种)：</p>
<p>$[1,3]^k,[2,3]^k,[3,3]^k$</p>
<p>$([1,3]+[4,4])^k,([2,3]+[4,4])^k,([3,3]+[4,4])^k,([4,4])^k$</p>
<p>发现第四层比第三层多了一项[4,4]不好整体转移</p>
<p>第4个元素结尾构成的子数组和的&#x3D;&#x3D;k次幂&#x3D;&#x3D;有四种：$[1,4]^k,[2,4]^k,[3,4]^k,[4,4]^k$</p>
<p>我们先不看$[4,4]^k$</p>
<p>以第4层作文当前层</p>
<p>令上一层子数组和的&#x3D;&#x3D;k次幂&#x3D;&#x3D;的 <u>和为</u> $b1[k]$;</p>
<p>令当前层子数组和的&#x3D;&#x3D;k次幂&#x3D;&#x3D;的 <u>和为</u> $b2[k]+[i,i]^k$;</p>
</blockquote>
<blockquote>
<p>由二项式展开定理，我们可以得到：</p>
</blockquote>
<blockquote>
<p>$b1[k]$</p>
<p>$&#x3D; {(([1,3])^k+([2,3])^k+([3,3])^k)}$</p>
</blockquote>
<blockquote>
<p>$b2[k]$</p>
<p>$&#x3D;[1,4]^k+[2,4]^k+[3,4]^k$</p>
<p>$&#x3D; {(([1,3]+[4,4])^k+([2,3]+[4,4])^k+([3,3]+[4,4])^k)}$</p>
<p>$&#x3D;(\sum\binom{k}{j}([1,3]^j)<em>([4,4]^{k-j})+\sum\binom{k}{j}([2,3]^j)</em>([4,4]^{k-j})+\sum\binom{k}{j}([3,3]^j)*([4,4]^{k-j}))$</p>
<p>$&#x3D;\sum\binom{k}{j}b1[j]*[4,4]^{k-j}$</p>
<p>我们以i元素结尾的所有子数组和的k次幂的和作为状态：$dp[i][k]$</p>
<p>状态转移方程可以写成如下：</p>
<p>$dp[i][k]&#x3D;dp[i-1][k]+[i,i]^k$</p>
</blockquote>
<blockquote>
<p>上一个引用块的第3步用到了二项式展开定理，因此在代码中体现为多了m这种循环</p>
<p>$&#x3D;(\sum\binom{k}{j}([1,3]^j)<em>([4,4]^{k-j})+\sum\binom{k}{j}([2,3]^j)</em>([4,4]^{k-j})+\sum\binom{k}{j}([3,3]^j)*([4,4]^{k-j}))$</p>
<p>这个式子意味着需要保留以第i个元素结尾的子数组和的1到k次幂的和的状态。</p>
<p>具体如下：</p>
<p>$[1,3]^0*[4,4]^2+[2,3]^0*[4,4]^2+[3,3]^0*[4,4]^2$</p>
<p>$[1,3]^1*[4,4]^1+[2,3]^1*[4,4]^1+[3,3]^1*[4,4]^1$</p>
<p>$[1,3]^2*[4,4]^0+[2,3]^2*[4,4]^0+[3,3]^2*[4,4]^0$</p>
<p>也就是：</p>
<p>$[1,3]^0+[2,3]^0+[3,3]^0$ 是被提前算出来的 b1[0]</p>
<p>$[1,3]^1+[2,3]^1+[3,3]^1$ 是被提前算出来的 b1[1]</p>
<p>$[1,3]^2+[2,3]^2+[3,3]^2$ 是被提前算出来的 b1[2]</p>
<p>也就是以第三个元素结尾的子数组的和的1-2次幂 分别和 $[4,4]$的2-1次幂相乘</p>
<p>也就是：</p>
<p>$b1[j]$</p>
<p>在代码中体现为：</p>
<p>$dp[i-1][j]$</p>
</blockquote>
<div class="code-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span><span class="number">+10</span>,M=<span class="number">11</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> a[N],ap[N];</span><br><span class="line"><span class="type">int</span> c[M][M];</span><br><span class="line"><span class="type">int</span> dp[N][M];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="type">int</span> n,k=<span class="number">10</span>;</span><br><span class="line">  cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    cin&gt;&gt;a[i];</span><br><span class="line">    a[i]%=mod;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 预处理组合数</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=k;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=i;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(j==<span class="number">0</span>) c[i][j]=<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">else</span> c[i][j]=(c[i<span class="number">-1</span>][j]+c[i<span class="number">-1</span>][j<span class="number">-1</span>])%mod;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//res统计答案</span></span><br><span class="line">  <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="comment">// 每一层元素的幂次</span></span><br><span class="line">    ap[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=k;j++)&#123;</span><br><span class="line">      ap[j]=ap[j<span class="number">-1</span>]*a[i]%mod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=k;j++)&#123;</span><br><span class="line">      <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> m=<span class="number">0</span>;m&lt;=j;m++)&#123;</span><br><span class="line">        <span class="type">int</span> x=c[j][m]%mod;</span><br><span class="line">        <span class="comment">// cout&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">        <span class="comment">// sum=(sum+c[j][m]*dp[i-1][m])%mod;</span></span><br><span class="line">        <span class="comment">// sum=(sum+ap[j-m])%mod;</span></span><br><span class="line">        x=(x*dp[i<span class="number">-1</span>][m])%mod;</span><br><span class="line">        x=(x*ap[j-m])%mod;</span><br><span class="line">        sum=(sum+x)%mod;</span><br><span class="line">      &#125;</span><br><span class="line">      dp[i][j]=(sum+ap[j])%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    res=(res+dp[i][k])%mod;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line">  <span class="comment">//   for(int j=0;j&lt;=k;j++)&#123;</span></span><br><span class="line">  <span class="comment">//     cout&lt;&lt;dp[i][j]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">//   cout&lt;&lt;endl;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">  cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>


]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2025/03/29/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
]]></content>
  </entry>
</search>
