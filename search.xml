<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2025/03/29/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>ABC-376(a-e)</title>
    <url>/2025/03/29/ABC-376-a-e/</url>
    <content><![CDATA[<p>@[toc]</p>
<h2 id="Tasks"><a href="#Tasks" class="headerlink" title="Tasks"></a>Tasks</h2><hr>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="left">Task Name</th>
<th align="right">Time Limit</th>
<th align="right">Memory Limit</th>
<th align="left"></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_a" >A<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_a" >Candy Button<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="right">2 sec</td>
<td align="right">1024 MB</td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/submit?taskScreenName=abc376_a" >Submit<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
</tr>
<tr>
<td align="center"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_b" >B<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_b" >Hands on Ring (Easy)<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="right">2 sec</td>
<td align="right">1024 MB</td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/submit?taskScreenName=abc376_b" >Submit<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
</tr>
<tr>
<td align="center"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_c" >C<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_c" >Prepare Another Box<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="right">2 sec</td>
<td align="right">1024 MB</td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/submit?taskScreenName=abc376_c" >Submit<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
</tr>
<tr>
<td align="center"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_d" >D<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_d" >Cycle<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="right">2 sec</td>
<td align="right">1024 MB</td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/submit?taskScreenName=abc376_d" >Submit<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
</tr>
<tr>
<td align="center"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_e" >E<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_e" >Max × Sum<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="right">2 sec</td>
<td align="right">1024 MB</td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/submit?taskScreenName=abc376_e" >Submit<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
</tr>
<tr>
<td align="center"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_f" >F<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_f" >Hands on Ring (Hard)<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="right">2 sec</td>
<td align="right">1024 MB</td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/submit?taskScreenName=abc376_f" >Submit<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
</tr>
<tr>
<td align="center"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_g" >G<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/tasks/abc376_g" >Treasure Hunting<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
<td align="right">2 sec</td>
<td align="right">1024 MB</td>
<td align="left"><a class="link"   href="https://atcoder.jp/contests/abc376/submit?taskScreenName=abc376_g" >Submit<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></td>
</tr>
</tbody></table>
<h2 id="ABC376"><a href="#ABC376" class="headerlink" title="ABC376"></a>ABC376</h2><blockquote>
<p>总结,acde题都能够在赛事大概读通题目,b题没看明白,</p>
<p>我感觉可能是自己的堆栈以及bfs还不够熟练</p>
</blockquote>
<h4 id="A"><a href="#A" class="headerlink" title="A"></a>A</h4><blockquote>
<p>最近总是A就wa，好好反思一下哈</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> n,c;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;c;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">a</span><span class="params">(n+<span class="number">1</span>)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> last=a[<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i]-last&gt;=c)&#123;</span><br><span class="line">			res++;</span><br><span class="line">			last=a[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>





<h4 id="B"><a href="#B" class="headerlink" title="B"></a>B</h4><blockquote>
<p>大致意思就是在环上移动到手的目的地的时候不能踩到另一只手</p>
<p>一开始这个代码不太行，应该是避开堵在中间的东西</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,q;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> l=<span class="number">1</span>,r=<span class="number">2</span>;</span><br><span class="line">	<span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">		<span class="type">char</span> h;</span><br><span class="line">		<span class="type">int</span> t;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;h&gt;&gt;t;</span><br><span class="line">		<span class="keyword">if</span>(h==<span class="string">&#x27;L&#x27;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(t&lt;=r)&#123;</span><br><span class="line">				res+=t-l;</span><br><span class="line">				l=t;</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				res+=(l+<span class="number">6</span>-t);</span><br><span class="line">				l=t;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(t&gt;=l)&#123;</span><br><span class="line">				res+=t-r;</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				res+=(r+<span class="number">6</span>-t);</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>改进但wa了13个点</p>
<p>第一个判断少了abs</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,q;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> l=<span class="number">1</span>,r=<span class="number">2</span>;</span><br><span class="line">	ll res=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">		<span class="type">char</span> h;</span><br><span class="line">		<span class="type">int</span> t;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;h&gt;&gt;t;</span><br><span class="line">		<span class="keyword">if</span>(h==<span class="string">&#x27;L&#x27;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(t&lt;=r&amp;&amp;l&lt;r)&#123;</span><br><span class="line">				res+=<span class="built_in">abs</span>(t-l);</span><br><span class="line">				l=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&lt;=r&amp;&amp;l&gt;r)&#123;</span><br><span class="line">				res+=(t+n-l);</span><br><span class="line">				l=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&gt;r&amp;&amp;l&lt;r)&#123;</span><br><span class="line">				res+=n-t+l;</span><br><span class="line">				l=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&gt;r&amp;&amp;l&gt;r)&#123;</span><br><span class="line">				res+=<span class="built_in">abs</span>(l-t);</span><br><span class="line">				l=t; </span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// cout&lt;&lt;res&lt;&lt;endl;</span></span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(t&lt;=l&amp;&amp;l&gt;r)&#123;</span><br><span class="line">				res+=<span class="built_in">abs</span>(t-r);</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&lt;=l&amp;&amp;l&lt;r)&#123;</span><br><span class="line">				res+=(t+n-r);</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&gt;l&amp;&amp;l&gt;r)&#123;</span><br><span class="line">				res+=n-t+r;</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(t&gt;l&amp;&amp;l&lt;r)&#123;</span><br><span class="line">				res+=<span class="built_in">abs</span>(r-t);</span><br><span class="line">				r=t;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// cout&lt;&lt;res&lt;&lt;endl;</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>jiangly gg的思路就是那么简单清晰</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://img-blog.csdnimg.cn/img_convert/562e2282b6375ac3f5434493f3e64559.png"
                      alt="image-20241020140309305"
                ></p>
<blockquote>
<p>不动的那个在中间才需要绕路~</p>
</blockquote>
<h4 id="C"><a href="#C" class="headerlink" title="C"></a>C</h4><blockquote>
<p>如果一开始就都能刚刚好装好就很好,答案就是那个没有盒子装的玩具的尺寸</p>
<p>如果都能装下,但是空隙浪费了?,那我们就从大到小的开始装</p>
</blockquote>
<blockquote>
<p>尽可能把大的先装完了去,</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">a</span><span class="params">(n+<span class="number">1</span>)</span>,<span class="title function_">b</span><span class="params">(n)</span>;</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">	<span class="type">int</span> maxn=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		maxn=max(maxn,a[i]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line"></span><br><span class="line">	sort(a.begin(),a.end());</span><br><span class="line">	sort(b.begin(),b.end());</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;b[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="type">int</span> x=lower_bound(a.begin(),a.end(),b[i])-a.begin();</span><br><span class="line">		<span class="comment">// cout&lt;&lt;x&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="keyword">if</span>(a[x<span class="number">-1</span>]&gt;b[i]||x==<span class="number">1</span>&amp;&amp;a[x]&gt;b[i])&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>一开始胡乱倒腾</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N],c[N];</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">st</span><span class="params">(n+<span class="number">1</span>)</span>,<span class="title function_">flag</span><span class="params">(n+<span class="number">1</span>)</span>;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt; b(n);</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">	<span class="type">int</span> maxn=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		maxn=max(maxn,a[i]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;c[i];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">	sort(c+<span class="number">1</span>,c+n);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// for(int i=1;i&lt;n;i++)&#123;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 	b[i].first=c[i];</span></span><br><span class="line">	<span class="comment">// 	b[i].second=i;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line">	<span class="comment">// 	cout&lt;&lt;a[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">	<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// for(int i=1;i&lt;n;i++)&#123;</span></span><br><span class="line">	<span class="comment">// 	cout&lt;&lt;c[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">	<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cnt=n<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i]&lt;=c[cnt])&#123;</span><br><span class="line">			flag[i]=<span class="number">1</span>;</span><br><span class="line">			st[cnt]=<span class="number">1</span>;</span><br><span class="line">			cnt--;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!st[i])&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!flag[i])&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p>一个acm集训队不如一个abc交流群</p>
<p>模仿佬二分，wa了一个点，估计是r取值不够</p>
<p>好吧，改成1e9也不行。</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">a</span><span class="params">(n+<span class="number">1</span>)</span>,<span class="title function_">b</span><span class="params">(n)</span>;</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">	<span class="type">int</span> maxn=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">		maxn=max(maxn,b[i]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	sort(a.begin(),a.end());</span><br><span class="line"></span><br><span class="line">	<span class="keyword">auto</span> check=[&amp;](<span class="type">int</span> mid)&#123;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; c = b;</span><br><span class="line">		c.push_back(mid);</span><br><span class="line">		<span class="comment">// cout&lt;&lt;mid&lt;&lt;endl;</span></span><br><span class="line">		sort(c.begin(),c.end());</span><br><span class="line"></span><br><span class="line">		<span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;a[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">		<span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;c[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]&gt;c[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> l=<span class="number">0</span>,r=maxn+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">		<span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(check(mid)) r=mid;</span><br><span class="line">		<span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(!l||l==maxn+<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;l&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>abc真是个小可爱，敢卡我1e9,🙂</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">a</span><span class="params">(n+<span class="number">1</span>)</span>,<span class="title function_">b</span><span class="params">(n)</span>;</span><br><span class="line">	<span class="built_in">map</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">	<span class="type">int</span> maxn=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">		maxn=max(maxn,b[i]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	sort(a.begin(),a.end());</span><br><span class="line"></span><br><span class="line">	<span class="keyword">auto</span> check=[&amp;](<span class="type">int</span> mid)&#123;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; c = b;</span><br><span class="line">		c.push_back(mid);</span><br><span class="line">		<span class="comment">// cout&lt;&lt;mid&lt;&lt;endl;</span></span><br><span class="line">		sort(c.begin(),c.end());</span><br><span class="line"></span><br><span class="line">		<span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;a[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">		<span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;c[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]&gt;c[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> l=<span class="number">0</span>,r=<span class="number">1e9</span>+<span class="number">1</span>,ans=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">		<span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(check(mid))&#123;</span><br><span class="line">			r=mid;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(l==<span class="number">1e9</span>+<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;l&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p>网友原本的贪心</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">int</span> n,a[<span class="number">200005</span>],b[<span class="number">200005</span>];</span><br><span class="line"><span class="type">bool</span> <span class="title function_">cmp</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;b[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">	sort(b+<span class="number">1</span>,b+n,cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(b[i]&gt;=a[i])&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;=n<span class="number">-1</span>;j++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(b[i]&gt;=a[i+<span class="number">1</span>])&#123;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a[i]);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a[n]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://img-blog.csdnimg.cn/img_convert/a685efeb0e342bd47532b07530f3c2dd.png"
                      alt="image-20241020111019932"
                ></p>
<blockquote>
<p>帮网友改的贪心</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">int</span> n,a[<span class="number">200005</span>],b[<span class="number">200005</span>];</span><br><span class="line"><span class="type">bool</span> <span class="title function_">cmp</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;b[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">	sort(b+<span class="number">1</span>,b+n,cmp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> index=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(b[i]&gt;=a[i])&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			index=i;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;=n<span class="number">-1</span>;j++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(i&lt;=n&amp;&amp;b[j]&gt;=a[i+<span class="number">1</span>])&#123;</span><br><span class="line">					i++;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">					<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a[index]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>









<h4 id="D"><a href="#D" class="headerlink" title="D"></a>D</h4><blockquote>
<p>只能说难爆了,竟然轮到我用tarjan算法,虽然还是没有用tarjan做出来</p>
</blockquote>
<blockquote>
<p>如果回归最本质的问题,包含1的最小环是否能通过bfs求得,妈的,不就是用bfs求从1到1的最短路吗……</p>
</blockquote>
<blockquote>
<p>赛后第一打,wa了14个点</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> h[N],e[N],ne[N],idx;</span><br><span class="line"><span class="type">int</span> d[N],st[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">	e[idx]=b,ne[idx]=h[a],h[a]=idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bfs</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">queue</span>&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">	st[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=h[<span class="number">1</span>];~i;i=ne[i])&#123;</span><br><span class="line">		<span class="type">int</span> j=e[i];</span><br><span class="line">		d[j]=<span class="number">1</span>;</span><br><span class="line">        st[j]=<span class="number">1</span>;</span><br><span class="line">		q.push(j);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">		<span class="type">int</span> t=q.front();</span><br><span class="line">		q.pop();</span><br><span class="line">		st[t]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(t==<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;d[<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=h[t];~i;i=ne[i])&#123;</span><br><span class="line">			<span class="type">int</span> j=e[i];</span><br><span class="line">			<span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">				d[j]=d[t]+<span class="number">1</span>;</span><br><span class="line">				q.push(j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,m;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="type">int</span> a,b;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		add(a,b);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	bfs();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>借鉴了jiangly的,发现是和自己的思路差不多的,但是为什么自己写的就是错的</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> h[N],e[N],ne[N],idx;</span><br><span class="line"><span class="type">int</span> d[N],st[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">	e[idx]=b,ne[idx]=h[a],h[a]=idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bfs</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">queue</span>&lt;<span class="type">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=h[<span class="number">1</span>];~i;i=ne[i])&#123;</span><br><span class="line">		<span class="type">int</span> j=e[i];</span><br><span class="line">		d[j]=<span class="number">1</span>;</span><br><span class="line">		q.push(j);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">		<span class="type">int</span> t=q.front();</span><br><span class="line">		q.pop();</span><br><span class="line">        </span><br><span class="line">		<span class="keyword">if</span>(t==<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;d[<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=h[t];~i;i=ne[i])&#123;</span><br><span class="line">			<span class="type">int</span> j=e[i];</span><br><span class="line">			<span class="keyword">if</span>(d[j]==<span class="number">0x3f3f3f3f</span>)&#123;</span><br><span class="line">				d[j]=d[t]+<span class="number">1</span>;</span><br><span class="line">				q.push(j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,m;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="type">int</span> a,b;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		add(a,b);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	bfs();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> h[N],e[N],ne[N],idx;</span><br><span class="line"><span class="type">int</span> d[N],st[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">	e[idx]=b,ne[idx]=h[a],h[a]=idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bfs</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">queue</span>&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">	<span class="comment">// st[1]=1;</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=h[<span class="number">1</span>];~i;i=ne[i])&#123;</span><br><span class="line">		<span class="type">int</span> j=e[i];</span><br><span class="line">		d[j]=<span class="number">1</span>;</span><br><span class="line">        <span class="comment">// st[j]=1;</span></span><br><span class="line">		q.push(j);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">		<span class="type">int</span> t=q.front();</span><br><span class="line">		q.pop();</span><br><span class="line">		<span class="keyword">if</span>(st[t]) <span class="keyword">continue</span>;</span><br><span class="line">		st[t]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(t==<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;d[<span class="number">1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=h[t];~i;i=ne[i])&#123;</span><br><span class="line">			<span class="type">int</span> j=e[i];</span><br><span class="line">			<span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">				d[j]=d[t]+<span class="number">1</span>;</span><br><span class="line">				q.push(j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,m;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="type">int</span> a,b;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		add(a,b);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	bfs();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>我好像悟了，因为会有自环啊老铁</p>
<p>st[j]&#x3D;1和st[t]&#x3D;1，在碰到自环的时候是有区别的</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> h[N],e[N],ne[N],idx;</span><br><span class="line"><span class="type">int</span> d[N],st[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">	e[idx]=b,ne[idx]=h[a],h[a]=idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bfs</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">queue</span>&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">	d[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">	st[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=h[<span class="number">1</span>];~i;i=ne[i])&#123;</span><br><span class="line">		<span class="type">int</span> j=e[i];</span><br><span class="line">		<span class="keyword">if</span>(j==<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">			d[j]=d[<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">			st[j]=<span class="number">1</span>;</span><br><span class="line">			q.push(j);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// q.push(j);</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">		<span class="type">int</span> t=q.front();</span><br><span class="line">		q.pop();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// if(st[t]) continue;</span></span><br><span class="line">		<span class="comment">//st[t]=1;</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=h[t];~i;i=ne[i])&#123;</span><br><span class="line">			<span class="type">int</span> j=e[i];</span><br><span class="line">			<span class="keyword">if</span>(j==<span class="number">1</span>)&#123;</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;d[t]+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(!st[j])&#123;</span><br><span class="line">				d[j]=d[t]+<span class="number">1</span>;</span><br><span class="line">				st[j]=<span class="number">1</span>;</span><br><span class="line">				q.push(j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> n,m;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="type">int</span> a,b;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">		add(a,b);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	bfs();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>









<h4 id="E"><a href="#E" class="headerlink" title="E"></a>E</h4><blockquote>
<p>选的是下标，公式也是运用在下标。</p>
<p>动态规划行不行🙁</p>
<p>记忆化搜索不是得卡死</p>
<p>果不其然的卡飞了。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://img-blog.csdnimg.cn/img_convert/6d457c88af1ab25c022778af071d6bd9.png"
                      alt="image-20241020144205958"
                ></p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(t--)&#123;</span><br><span class="line">		<span class="type">int</span> n,k;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">vector</span>&lt;ll&gt; <span class="title function_">a</span><span class="params">(n+<span class="number">1</span>)</span>,<span class="title function_">b</span><span class="params">(n+<span class="number">1</span>)</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line"></span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">st</span><span class="params">(n+<span class="number">1</span>)</span>;</span><br><span class="line"></span><br><span class="line">		ll res=<span class="number">1e18</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">auto</span> dfs=[&amp;](<span class="keyword">auto</span>&amp;&amp;dfs,<span class="type">int</span> cnt,ll maxn,ll sum)&#123;</span><br><span class="line">			<span class="keyword">if</span>(cnt&gt;k) <span class="keyword">return</span>;</span><br><span class="line">			<span class="keyword">if</span>(cnt==k)&#123;</span><br><span class="line"></span><br><span class="line">				res=min(res,maxn*sum);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(!st[i])&#123;</span><br><span class="line">					st[i]=<span class="number">1</span>;</span><br><span class="line">                    <span class="comment">//dfs里不要携程maxn=max(a[i],maxn),</span></span><br><span class="line">                    <span class="comment">//否则路径上的maxn不就固定了</span></span><br><span class="line">					dfs(dfs,cnt+<span class="number">1</span>,max(a[i],maxn),sum+b[i]);</span><br><span class="line">					st[i]=<span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		dfs(dfs,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://img-blog.csdnimg.cn/img_convert/71bc65983f079ea4ece51a59b811a5e5.png"
                      alt="image-20241020145653349"
                ></p>
<blockquote>
<p>下面这样去记录，maxn记录的是遍历过的最大值，没有恢复现场，如果maxn被改成6（案例二），那么在恢复0点再用1点的时候记录的最大时6，而不是拿max(a[2](上一层的maxn),a[3]),而是max(maxn,a[3])&#x3D;6;</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://img-blog.csdnimg.cn/img_convert/eed0895281ea3930a061e7bdab93a1e9.png"
                      alt="image-20241020151741189"
                ></p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(t--)&#123;</span><br><span class="line">		<span class="type">int</span> n,k;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">vector</span>&lt;ll&gt; <span class="title function_">a</span><span class="params">(n)</span>,<span class="title function_">b</span><span class="params">(n)</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line"></span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">st</span><span class="params">(n+<span class="number">1</span>)</span>;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line"></span><br><span class="line">		ll res=<span class="number">1e18</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">auto</span> dfs=[&amp;](<span class="keyword">auto</span>&amp;&amp;dfs,<span class="type">int</span> cnt,ll maxn,ll sum)&#123;</span><br><span class="line">			<span class="keyword">if</span>(cnt&gt;k) <span class="keyword">return</span>;</span><br><span class="line">			<span class="keyword">if</span>(cnt==k)&#123;</span><br><span class="line">				<span class="comment">// cout&lt;&lt;maxn&lt;&lt;endl;</span></span><br><span class="line">				<span class="comment">// for(int i=0;i&lt;k;i++) cout&lt;&lt;ans[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">				<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">				<span class="keyword">if</span>(res&gt;maxn*sum)&#123;</span><br><span class="line">					res=maxn*sum;</span><br><span class="line">					<span class="comment">// cout&lt;&lt;maxn&lt;&lt;endl;</span></span><br><span class="line">					<span class="comment">// for(int i=0;i&lt;k;i++) cout&lt;&lt;ans[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">					<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(!st[i])&#123;</span><br><span class="line">					st[i]=<span class="number">1</span>;</span><br><span class="line">					<span class="comment">// cout&lt;&lt;maxn&lt;&lt;endl;</span></span><br><span class="line">					ans.push_back(i);</span><br><span class="line">					<span class="comment">// dfs(dfs,cnt+1,maxn=max(a[i],maxn),sum+b[i]);</span></span><br><span class="line">					dfs(dfs,cnt+<span class="number">1</span>,max(a[i],maxn),sum+b[i]);</span><br><span class="line">					ans.pop_back();</span><br><span class="line">					st[i]=<span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		dfs(dfs,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p>学习了jiangly gg的代码，发现搜索其实会浪费很多时间，因为是选择三个元素，最大值直接用排序找到就好了，而最小值，一定是小的和小的相加，成一个不算大的最大值。</p>
<p>枚举a[i]就好了，排除掉添加第i对元素的之前的最大值，这样是比较优秀的枚举方式</p>
</blockquote>
<blockquote>
<p>只有大的a[i]带着的b[i]小于前面的b[j]才有可能对最小值有贡献</p>
</blockquote>
<div class="code-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">signed</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(t--)&#123;</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> n,k;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">vector</span>&lt;ll&gt; <span class="title function_">a</span><span class="params">(n)</span>,<span class="title function_">b</span><span class="params">(n)</span>;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">ord</span><span class="params">(n)</span>;</span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line"></span><br><span class="line">		iota(ord.begin(),ord.end(),<span class="number">0</span>);</span><br><span class="line">		sort(ord.begin(),ord.end(),[&amp;](<span class="type">int</span> x,<span class="type">int</span> y)&#123;</span><br><span class="line">			<span class="keyword">return</span> a[x]&lt;a[y];</span><br><span class="line">		&#125;);	</span><br><span class="line"></span><br><span class="line">		<span class="built_in">priority_queue</span>&lt;<span class="type">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line">		ll sum=<span class="number">0</span>;</span><br><span class="line">		ll res=<span class="number">1e18</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// for(auto i: ord) cout&lt;&lt;i&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">		<span class="comment">// for(auto i:ord)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;a[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">		<span class="comment">// for(auto i:ord)&#123;</span></span><br><span class="line">		<span class="comment">// 	cout&lt;&lt;b[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line">		<span class="comment">// cout&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">auto</span> i:ord)&#123;</span><br><span class="line">			sum+=b[i];</span><br><span class="line">			q.push(b[i]);</span><br><span class="line">			<span class="comment">// cout&lt;&lt;b[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">			<span class="keyword">while</span>(q.size()&gt;k)&#123;</span><br><span class="line">				sum-=q.top();</span><br><span class="line">				q.pop();</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(q.size()==k) res=min(res,sum*a[i]);</span><br><span class="line">			 </span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
  </entry>
</search>
